steps:
  - powershell: |
      Write-Host "Unity Installation Validation"
      $editorRootPath = ""
      $editorFileEx = ""
      $version = Get-Content -Path "$(System.DefaultWorkingDirectory)\$(project.name)\ProjectSettings\ProjectVersion.txt"
      $pattern = '(?<version>(?:(?<major>\d+)\.)?(?:(?<minor>\d+)\.)?(?:(?<patch>\d+[fab]\d+)\b))|((?:\((?<revision>\w+))\))'
      $matches = $matches = [regex]::Matches($version, $pattern)
      $unityVersion = $matches[1].Groups['version'].Value.Trim()
      $unityVersionChangeSet = $matches[2].Groups['revision'].Value.Trim()

      if ( (-not $global:PSVersionTable.Platform) -or ($global:PSVersionTable.Platform -eq "Win32NT") ) {
        $hubPath = "C:\Program Files\Unity Hub\Unity Hub.exe"
        $editorRootPath = "C:\Program Files\Unity\Hub\Editor\"
        $editorFileEx = "\Editor\Unity.exe"
      }
      elseif ( $global:PSVersionTable.OS.Contains("Darwin") ) {
        $hubPath = "/Applications/Unity Hub.app/Contents/MacOS/Unity Hub"
        $editorRootPath = "/Applications/Unity/Hub/Editor/"
        $editorFileEx = "/Unity.app"
      }
      elseif ( $global:PSVersionTable.OS.Contains("Linux") ) {
        $hubPath = "./UnityHub.AppImage"
        $editorRootPath = "~/Unity/Hub/Editor/"
        $editorFileEx = "/Unity"
      }

      if ( Test-Path -Path $hubPath ) {
        Write-Host "Unity Hub found at `"$hubPath`""
        Write-Host ""
      } else {
        Write-Error "Failed to validate Unity Hub path at `"$hubPath`""
        exit 1
      }

      Write-Host "Unity HUB CLI Options:"
      $p = Start-Process -NoNewWindow -PassThru -Wait -FilePath "$hubPath" -ArgumentList @('--','--headless','help')
      Write-Host ""

      $editorPath = "{0}{1}{2}" -f $editorRootPath,$unityVersion,$editorFileEx

      if ( -not (Test-Path -Path $editorPath) ) {
        Write-Host "Installing $unityVersion ($unityVersionChangeSet)..."
        $installArgs = @('--','--headless','install',"--version $unityVersion","--changeset $unityVersionChangeSet",'--cm');

        foreach ( $module in ${{ parameters.modules }} ) {
          $installArgs += '-m'
          $installArgs += $module
        }

        $p = Start-Process -NoNewWindow -PassThru -Wait -FilePath "$hubPath" -ArgumentList $installArgs
        Write-Host ""
      }

      Write-Host "Getting installed editors..."
      $p = Start-Process -NoNewWindow -PassThru -Wait -FilePath "$hubPath" -ArgumentList @('--','--headless','editors','-i')
      Write-Host ""

      if ( -not (Test-Path -Path $editorPath) ) {
        Write-Error "Failed to find a valid editor installation at `"$editorPath`""
        exit 1
      }

      Write-Host "Unity Editor path: `"$editorPath`""
      echo "##vso[task.setvariable variable=EditorPath]$editorPath"
      exit 0
    failOnStderr: true
    displayName: 'Validate Unity Editor Installation'
